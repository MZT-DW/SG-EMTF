import matplotlib.pyplot as plt
from matplotlib.pyplot import MultipleLocator
import numpy as np

#折线图

x = np.arange(32, 512, 32)
#x = [5,7,11,17,19,25]#点的横坐标
'''
k1 = [
2.572 , #dimension: 50
3.860 , #dimension: 100
5.381 , #dimension: 150
6.727 , #dimension: 200
7.318 , #dimension: 250
8.227 , #dimension: 300
9.995 , #dimension: 350
11.679 , #dimension: 400
12.001 , #dimension: 450
14.824 , #dimension: 500
17.160 , #dimension: 550
18.456 , #dimension: 600
18.650 , #dimension: 600
21.840 , #dimension: 700
25.504 , #dimension: 750
26.910 , #dimension: 800
28.944 , #dimension: 850
43.648 , #dimension: 900
45.121 , #dimension: 950
47.726 , #dimension: 1000
50.075 , #dimension: 1050
51.935 , #dimension: 1100
56.067 , #dimension: 1150
58.133 , #dimension: 1200
60.133 , #dimension: 1250
63.832 , #dimension: 1300
67.322 , #dimension: 1350
67.852 , #dimension: 1400
70.187 , #dimension: 1450
73.187 , #dimension: 1500
]
'''
font1 = {'family' : 'Times New Roman',
'weight' : 'normal',
'size'   : 13,
}

k1 = [ #GPU-based
#0.594947, 0.545489, 0.524779, 0.513617, 0.511172, 0.507186, 0.500912, 0.498038, 0.488719, 0.487947, 0.478121, 0.471484, 0.471252, 0.464250, 0.463958, 0.464018, 0.460562, 0.460984, 0.416870, 0.399440, 0.398481, 0.362821, 0.371246, 0.359537, 0.334162, 0.335563, 0.334501, 0.311900, 0.301026, 0.284764, 0.275313, 0.275132, 0.266413, 0.261414, 0.256978, 0.248036, 0.240536, 0.243034, 0.242146, 0.236888, 0.234140, 0.230285, 0.225382, 0.227777, 0.231791, 0.227906, 0.230248, 0.225927, 0.223091, 0.228675, 0.227954, 0.222185, 0.225615, 0.212845, 0.202594, 0.195810, 0.191601, 0.186368, 0.183427, 0.177367, 0.172948, 0.168639, 0.165722, 0.161537, 0.159845, 0.157105, 0.155372, 0.153579, 0.151911, 0.150295, 0.148385, 0.147778, 0.147292, 0.146705, 0.145479, 0.151982, 0.151251, 0.150107, 0.148091, 0.146722, 0.145317, 0.144783, 0.144023, 0.152896, 0.151560, 0.150895, 0.148865, 0.147756, 0.146297, 0.144509, 0.142414, 0.140470, 0.138517, 0.136525, 0.136573, 0.135056, 0.132920, 0.131534, 0.131543, 0.133406, 0.132431, 0.131526, 0.131087, 0.130817, 0.129256, 0.130225, 0.129169, 0.128862, 0.128248, 0.128352, 0.128275, 0.126572, 0.125633, 0.124502, 0.122872, 0.123341, 0.123265, 0.123032, 0.123047, 0.122865, 0.121859, 0.121039, 0.121253, 0.119400, 0.119595, 0.118881, 0.117463, 0.116660, 0.116134, 0.115292, 0.114899, 0.114680, 0.115481, 0.115556, 0.115186, 0.114454, 0.113807, 0.114080, 0.113946, 0.112564, 0.110908, 0.109496, 0.108909, 0.108937, 0.107273, 0.106755, 0.106298, 0.106696, 0.105643, 0.105192, 0.104467, 0.103953, 0.104108, 0.102903, 0.103643, 0.102626, 0.102475, 0.103330, 0.103087, 0.101879, 0.101056, 0.100430, 0.099519, 0.098383, 0.098334, 0.097854, 0.097716, 0.106246, 0.106846, 0.105042, 0.104234, 0.103382, 0.103332, 0.102341, 0.101898, 0.101028, 0.101131, 0.101954, 0.101245, 0.100950, 0.100568, 0.101046, 0.100009, 0.099183, 0.099006, 0.098749, 0.097798, 0.096579, 0.096702, 0.096322, 0.096505, 0.096250, 0.096131, 0.095994, 0.095420, 0.096115, 0.095185, 0.094868, 0.093256, 0.092537,
3.29, 2.65, 2.46, 2.54, 2.51, 2.53, 2.50, 2.66, 2.70, 3.02, 3.06, 3.54, 4.23, 5.59, 9.64
]

k2 = [ #DE
17017.107422,
15397.320313,
14894.220703,
14788.343750,
14604.208008,
14459.740234,
14095.240234,
13954.365234,
13762.486328,
13714.502930,
13676.549805,
13481.673828,
13381.924805,
13353.833984,
13241.000000,
13200.376953,
13084.977539,
13054.443359,
12932.607422,
12745.576172,
12719.934570,
]

k3 = [ #CPU-based
21.333241,
20.905077,
20.758867,
20.629425,
20.526392,
20.456348,
20.370388,
20.316910,
20.250299,
20.170067,
20.121508,
20.060614,
19.961208,
19.776951,
19.717312,
19.619028,
19.483467,
19.359676,
19.113298,
18.908100,
18.733965,
]

k4 = [ #All-in

16798.080078,
13998.390625,
13221.525391,
12718.189453,
12416.908203,
11943.634766,
11052.875000,
10274.504883,
9843.208984,
9382.414063,
9165.957031,
8564.828125,
8222.146484,
7821.557129,
7077.307129,
6830.553711,
6561.473633,
6336.606934,
6255.850586,
6031.594727,
5762.428711,
]
# k1 = [0.515505, 0.273982, 0.191255, 0.152497, 0.129264, 0.113651, 0.102272, 0.0937029, 0.0869997, 0.0816106, 0.0773076, 0.0738406, 0.0710235, 0.0686911, 0.0667824, 0.0651842, 0.0637603, 0.0625284, 0.0614261, 0.06043, 0.0594913, ]
# k2 = [0.489015, 0.266368, 0.195214, 0.156102, 0.131514, 0.114379, 0.100226, 0.090688, 0.0832876, 0.0774588, 0.0727508, 0.0682066, 0.0652489, 0.0628523, 0.0608639, 0.0591686, 0.0574271, 0.0561303, 0.0550236, 0.0539962, 0.053079, ]

#k1 = [0.8222,0.918,0.9344,0.9262,0.9371,0.9353]#线1的纵坐标
#k2 = [0.8988,0.9334,0.9435,0.9407,0.9453,0.9453]#线2的纵坐标
plt.plot(x,k1,'o-', color = 'steelblue',label="SG-EMTF", alpha=1, linewidth=2, markerfacecolor='r')#s-:方形
#plt.plot(x,k2,'*-.',color = 'b',label="DE")#s-:方形
#plt.plot(x,k3,'*-.', color = 'g',label="CPU-based")#s-:方形
#plt.plot(x,k4,'*-.',color = 'black',label="All_in")#s-:方形
#plt.plot(x,k2,'o-',color = 'g',label="CNN-RLSTM")#o-:圆形
plt.xlabel('$\\tau_2$', font1)#横坐标名字
plt.ylabel("Time consumption(s)", font1)#纵坐标名字

#for a, b in zip(x, k1):
    #if(a % 100 == 50):
        #plt.text(a, b, b,ha='right', va='bottom', fontsize=7)

x_major_locator=MultipleLocator(64)
#把x轴的刻度间隔设置为1，并存在变量里
ax=plt.gca()
#ax为两条坐标轴的实例
ax.xaxis.set_major_locator(x_major_locator)

for a, b in zip(x, k1):
    plt.text(a, b + 0.1, b, ha='center', va='bottom', fontsize=10)

plt.legend(loc = "best")#图例
plt.tight_layout()
plt.show()